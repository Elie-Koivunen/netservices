# requires updating!

# create a new private network dedicated to the k8s nodes and isilon simulator
  - vmnet set to HOST-ONLY (e.g. vmnet7)
  - # deselect "connect to a host adapter to this network"
  - deselect "Use local DHCP"
  - for reference, set the subnet to 192.168.255.0 with a netmask of 255.255.255.0

# install linux vm instances on vmware workstation to run on
  # install a vm to act as a netservices
    # the netservices would deployed as the following:
  - 2 core
  - 1gb ram
  - network1 (select NAT)
  - network2 (select custom -> vmnet7)
  - select your linux distro image (centos7 minimal)
  # install linux vm instances on vmware workstation to run on
 
 # install a vm to act as a monitor
    # the net services would deployed as the following:
  - 4 core
  - 4gb ram
  - network2 (select custom -> vmnet7)
  - select your linux distro image (centos7 k8s)
  
  # install several vm to act as nodes, personal preferense is an odd number of nodes
  # each node-vm would deployed as the following:
  - 2 core
  - 2gb ram
  - network (select custom -> vmnet7)
  - select your linux distro image (centos7 k8s)
  
# on each vm linux installation:
  - select minimal installation
  - select timezone (gmt+2)
  - select disk to install on
  - deselect kdump
  - select desired keyboard layout ( finnish )
  - enable network interface
  - set root password a
  - create an account "mandalorian" with password a and designated as administrator (or post installation run# usermod -aG wheel mandalorian)

# on the netservices vm:
  - modify ssh #
    echo "UseDNS no" >> /etc/ssh/sshd_config
    echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
    systemctl restart sshd.service
  
  - disable the firewall
     - Disable Firewalld
     systemctl disable firewalld
     - Stop Firewalld
     systemctl stop firewalld
     - Check the Status of Firewalld
     systemctl status firewalld

  - disable selinux
    - check
    sestatus
    setenforce 0
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
    sestatus
  - set timezone
    timedatectl set-timezone Europe/Helsinki
    timedatectl status

  - configure second interface#
    - list devices (centos specific)
    nmcli -p dev
    - edit network script for the second interface
    mv /etc/sysconfig/network-scripts/ifcfg-ens34 /etc/sysconfig/network-scripts/bak-ifcfg-ens34-bak
    echo "NAME=ens34" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPADDR=192.168.255.5" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "PREFIX=24" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "#GATEWAY=192.168.255.5" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "DNS1=192.168.255.5" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "DEFROUTE=yes" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV4_FAILURE_FATAL=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "# Disable ipv6 #" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6INIT=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6INIT=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6_AUTOCONF=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6_DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6_FAILURE_FATAL=no" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "IPV6_ADDR_GEN_MODE=stable-privacy" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "UUID=32bf4491-ca99-44f3-bb90-3a06f877a285" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "DEVICE=ens34" >> /etc/sysconfig/network-scripts/ifcfg-ens34
    echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/ifcfg-ens34   
    - restart networking services:
    systemctl restart network
    - confirm setup
    nmcli -p dev
    ip a s
    ip r
    cat /etc/resolv.conf    
  
  echo "NETWORKING_IPV6=no" >> /etc/sysconfig/network
echo "IPV6INIT=no" >> /etc/sysconfig/network
echo "net.ipv6.conf.default.disable_ipv6=1" >> /etc/sysctl.conf
echo "net.ipv6.conf.all.disable_ipv6=1" >> /etc/sysctl.conf
sed -i 's/IPV6INIT=yes/IPV6INIT=no/g' /etc/sysconfig/network-scripts/ifcfg-ens33
echo "NOZEROCONF=yes" >> /etc/sysconfig/network
sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=1/g' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg
sed -i 's/^#\(ClientAliveInterval\).*$/\1 180/g' /etc/ssh/sshd_config
  
  
  - configure tftp
    mv /etc/xinetd.d/tftp /root/bak-tftp-bak
    echo "service tftp" >> /etc/xinetd.d/tftp
    echo "{" >> /etc/xinetd.d/tftp
    echo "        socket_type             = dgram" >> /etc/xinetd.d/tftp
    echo "        protocol                = udp" >> /etc/xinetd.d/tftp
    echo "        wait                    = yes" >> /etc/xinetd.d/tftp
    echo "        user                    = root" >> /etc/xinetd.d/tftp
    echo "        server                  = /usr/sbin/in.tftpd" >> /etc/xinetd.d/tftp
    echo "        server_args             = -s /var/lib/tftpboot" >> /etc/xinetd.d/tftp
    echo "        disable                 = no" >> /etc/xinetd.d/tftp
    echo "        per_source              = 11" >> /etc/xinetd.d/tftp
    echo "        cps                     = 100 2" >> /etc/xinetd.d/tftp
    echo "        flags                   = IPv4" >> /etc/xinetd.d/tftp
    echo "}" >> /etc/xinetd.d/tftp

    All the network boot related files are to be placed in tftp root directory “/var/lib/tftpboot”
    copy required network boot files in ‘/var/lib/tftpboot/’
    cp -v /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot
    cp -v /usr/share/syslinux/menu.c32 /var/lib/tftpboot
    cp -v /usr/share/syslinux/memdisk /var/lib/tftpboot
    cp -v /usr/share/syslinux/mboot.c32 /var/lib/tftpboot
    cp -v /usr/share/syslinux/chain.c32 /var/lib/tftpboot
    mkdir /var/lib/tftpboot/pxelinux.cfg
    mkdir /var/lib/tftpboot/networkboot

    copy the distro files to the tftpboot path
    mkdir /mnt/cdrom
    mount -o loop CentOS-7-x86_64-DVD-1511.iso /mnt/cdrom
    cd /mnt/cdrom
    cp -av * /var/ftp/pub/
    cp /mnt/cdrom/images/pxeboot/vmlinuz /var/lib/tftpboot/networkboot/
    cp /mnt/cdrom/images/pxeboot/initrd.img /var/lib/tftpboot/networkboot/
    umount /mnt/cdrom
    
  - create kickstart and PXE menu
    - hash the root password so it can be used in the kickstart file
      openssl passwd -1 a
          $1$PlIWL.7S$QXthlBMuPyN7jj3RF2BLp.
  
  - start and enable service to launch the PXE boot environment
      systemctl start xinetd
      systemctl enable xinetd
      systemctl start dhcpd.service
      systemctl enable dhcpd.service
      systemctl start vsftpd
      systemctl enable vsftpd

  - update to latest release#                   
    yum update -y
    
  - add repository for latest applications:
    (to install an up to date ansible, the epel repository needs to be added)
    yum --enablerepo=extras install epel-release -y
    yum -y install epel-release-7
    
  - install screen utility
    yum -y install screen
    
  - install packages for PXEBOOT  
    yum -y install dhcp tftp tftp-server syslinux vsftpd xinetd
    
  - install some clustering related packages# 
    yum -y install ansible

  - download dban
   wget -O /tmp/dban.iso https://sourceforge.net/projects/dban/files/dban/dban-2.3.0/dban-2.3.0_i586.iso/download

# on each node vm:
  - update to latest release#                   yum update -y
  - install some basic packages#                yum install wget curl net-tools screen iftop iostat iozone iperf expect iptraf -y
  - install some clustering related packages#   yum install ansible -y
  
